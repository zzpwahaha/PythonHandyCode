# for the pcolormesh to get the figure has the right aspect ration according to the number of pixels along x and y
def equalPixel(fig,ax,cbar,wspace=0.2,cbarspace=0.05):
    '''
    if the y axis is not working, try add contrained_layout=True in the addsubplots as figkw, 
    or plt.rcParams['figure.constrained_layout.use']=True, see more in
    https://matplotlib.org/tutorials/intermediate/constrainedlayout_guide.html
    '''
    if isinstance(ax,(tuple,list,np.ndarray)):
        for i in range(len(ax)):
            bboxAx=ax[i].get_position()
            by1=bboxAx.width*fig.get_figwidth()*ax[i].get_data_ratio()/fig.get_figheight()
            bboxAx.y0 = 1/2-by1/2; bboxAx.y1 = 1/2+by1/2
            if i>0:
                wid=bboxAx.width
                bboxAx.x0=xright+wspace*bboxAx.width
                bboxAx.x1=bboxAx.x0+wid
            xright=bboxAx.x1
            ax[i].set_position(bboxAx)
        bboxCbar = cbar.ax.get_position()
        widCbar=bboxCbar.width
        bboxCbar.x0 = bboxAx.x1 + cbarspace*bboxAx.width; bboxCbar.x1 = bboxCbar.x0 + widCbar; 
        bboxCbar.y0=bboxAx.y0; bboxCbar.y1=bboxAx.y1
        cbar.ax.set_position(bboxCbar)
    else:
        bboxAx=ax.get_position()
        by1=bboxAx.width*fig.get_figwidth()*ax.get_data_ratio()/fig.get_figheight()
        bboxAx.y0 = 1/2-by1/2; bboxAx.y1 = 1/2+by1/2
        ax.set_position(bboxAx)
        bboxCbar = cbar.ax.get_position()
        widCbar=bboxCbar.width
        bboxCbar.x0 = bboxAx.x1 + cbarspace*bboxAx.width; bboxCbar.x1 = bboxCbar.x0 + widCbar; 
        bboxCbar.y0=bboxAx.y0; bboxCbar.y1=bboxAx.y1
        cbar.ax.set_position(bboxCbar)
